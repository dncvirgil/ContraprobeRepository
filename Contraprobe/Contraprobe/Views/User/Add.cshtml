@model Contraprobe.Models.UserModel
@{
    ViewBag.Title = "Adauga utilizator nou";
}

<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm("Add", "User", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <hr />

    <div class="form-group">
        @Html.LabelFor(m => m.FirstName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.FirstName, "" , new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.LastName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.LastName,"", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
        @Html.LabelFor(m => m.Department, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Department, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Department,"", new { @class = "text-danger" })
        </div>
    </div>*@

    <div class="form-group">
       @Html.LabelFor(m => m.Department, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.Department, new List<SelectListItem>
                 {
                    new SelectListItem{ Text="Productie", Value = "Productie" },
                    new SelectListItem{ Text="Controlul calitatii", Value = "Controlul calitatii" },
                    new SelectListItem{ Text="Asigurarea calitatii", Value = "Asigurarea calitatii" }
                 },
                 new { @class = "btn btn-default dropdown-toggle col-md-10" }) @*clasa luata de pe bootstrap*@
                @Html.ValidationMessageFor(m => m.Department, "", new { @class = "text-danger" })
            </div>
        </div>



    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Email,"", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Password,"", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.ConfirmPassword,"", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <div class="checkbox">
                @Html.CheckBoxFor(m => m.IsAdministrator)
                @Html.LabelFor(m => m.IsAdministrator)
                @Html.ValidationMessageFor(m => m.IsAdministrator)
            </div>
        </div>
    </div>



    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Salveaza" />
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
