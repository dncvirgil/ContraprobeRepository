@model Contraprobe.Models.SampleModel

@{
    ViewBag.Title = "Add";
}

<h2>Adaugare proba noua</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

     @*dropdown for Product*@
    <div class="form-group">
        @Html.LabelFor(model => model.Product, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.Product, new { htmlAttributes = new { @class = "form-control" } })*@


            @*@Html.DropDownListFor(model => model.Product, new List<SelectListItem>
                 {
                    new SelectListItem{ Text="Injectabil", Value = "Injectabil" },
                    new SelectListItem{ Text="Tablete", Value = "Tablete" },
                    new SelectListItem{ Text="Capsule", Value = "Capsule" }
                 },
                 new { @class = "btn btn-default dropdown-toggle col-md-10" }) @*clasa luata de pe bootstrap*@
            @*@Html.ValidationMessageFor(model => model.Product, "", new { @class = "text-danger" })*@
            </div>
        </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Series, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Series, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Series, "", new { @class = "text-danger" })
        </div>
    </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductionDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductionDate, new { htmlAttributes = new { @class = "form-control", @placeholder = $"ex: {DateTime.Now.ToShortDateString()}" } })
                @Html.ValidationMessageFor(model => model.ProductionDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExpiryDate, htmlAttributes: new { @class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExpiryDate, new { htmlAttributes = new { @class = "form-control", @placeholder = $"ex: {DateTime.Now.ToShortDateString()}" } })
                @Html.ValidationMessageFor(model => model.ExpiryDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvare" class="btn btn-default" />
            </div>
        </div>
    </div>
    }

    <div>
        @Html.ActionLink("Vizualizare lista", "List")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
